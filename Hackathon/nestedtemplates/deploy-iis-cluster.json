{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "envPrefixName": {
      "type": "string",
      "metadata": {
        "description": "Prefix for the environment (2-5 characters)"
      },
      "defaultValue": "dna",
      "minLength": 2,
      "maxLength": 5
    },
    "webSrvVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2"
      ],
      "metadata": {
        "description": "The size of the Web Server VMs Created"
      },
      "defaultValue": "Standard_DS2_v2"
    },
    "numberOfWebSrvs": {
      "type": "int",
      "metadata": {
        "description": "Number of Web Servers"
      },
      "allowedValues": [
        1,
        2
      ],
      "defaultValue": 1
    },
    "virtualNetworkname": {
      "type": "string",
      "defaultValue": "HackNet"
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "defaultValue": "Demo-Hackathon1"
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "app-tier"
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "storageName": "[concat(parameters('envPrefixName'), 'stg', uniqueString(resourceGroup().id))]",
    "vhdContainer": "vhds",
    "storageAccountType": "Premium_LRS",
    "webSrvName": "[concat(parameters('envPrefixName'), 'app0')]",
    "webSrvVMSize": "[parameters('webSrvVMSize')]",
    "webSrvOSDiks": "[concat(parameters('envPrefixName'), 'WebSrvOS')]",
    "webSrvNicName": "[concat(variables('webSrvName'), 'Nic')]",
    "webSrvPublicIP": "[concat(parameters('envPrefixName'), 'websrvpip')]",
    "webSrvAvailabilitySetName": "[concat(parameters('envPrefixName'), 'webSrvAS')]",
    "webSrvNumbOfInstances": "[parameters('numberOfWebSrvs')]",
    "vmExtensionName": "dscExtension",
    "modulesUrl": "https: //raw.githubusercontent.com/albertwo1978/Quick-Templates/master/Hackathon/scripts/WebServerConfig.ps1.zip",
    "configurationFunction": "WebServerConfig.ps1\\WebServerConfig"
  },
  "resources": [
    {
      "name": "[variables('storageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [],
      "tags": {
        "displayName": "dnastore"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('webSrvAvailabilitySetName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "WebSrvAvailabilitySet"
      },
      "properties": {}
    },
    {
      "name": "[variables('webSrvPublicIP')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('apiVersion')]",
      "tags": {
        "displayName": "WebSrvPIP for LB"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "[variables('webSrvDnsNameforLBIP')]"
        }
      }
    },
    {
      "name": "[concat(variables('webSrvNicName'), copyindex())]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('apiVersion')]",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('webSrvNumbOfInstances')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "WebSrvNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', parameters('virtualNetworkResourceGroup'), '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualNetworkname'), '/subnets/', parameters('subnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('webSrvName'), copyindex())]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('apiVersion')]",
      "copy": {
        "name": "webSrvMachineLoop",
        "count": "[variables('webSrvNumbOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('webSrvNicName'), copyindex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('webSrvAvailabilitySetName'))]"
      ],
      "tags": {
        "displayName": "WebSrv"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('webSrvAvailabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('webSrvVMSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('webSrvName'),copyindex())]",
          "adminUsername": "[parameters('username')]",
          "adminPassword": "[parameters('password')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('storageName'), '.blob.core.windows.net/', variables('vhdContainer'), '/', variables('webSrvOSDiks'), copyindex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('webSrvNicName'), copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('webSrvName'), copyindex(),'/', variables('vmExtensionName'))]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "webSrvMachineLoop",
        "count": "[variables('webSrvNumbOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('webSrvName'), copyindex())]"
      ],
      "tags": {
        "displayName": "VM Extensions"
      },
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.19",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "[variables('modulesUrl')]",
          "SasToken": "",
          "ConfigurationFunction": "[variables('configurationFunction')]",
          "wmfVersion": "4.0",
          "Properties": {
          }
        },
        "protectedSettings": {}
      }
    }
  ]
}